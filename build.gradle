// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.61'
    repositories {
        google()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.3'
//        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.1.0'
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.0.0-RC16"
        classpath 'io.fabric.tools:gradle:1.31.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id("io.gitlab.arturbosch.detekt").version("1.0.0-RC16")
}

detekt {
    toolVersion = "[version]"

    parallel = false
    config = files("path/to/config.yml")
    buildUponDefaultConfig = false
    baseline = file("path/to/baseline.xml")
    disableDefaultRuleSets = false
    debug = false
    ignoreFailures = false
    reports {
        xml {
            enabled = true
            destination = file("build/reports/detekt.xml")
        }
        html {
            enabled = true
            destination = file("build/reports/detekt.html")
        }

        custom {
            reportId = "CustomJsonReport"
            destination = file("build/reports/detekt.json")
        }
    }
}

allprojects {
    repositories {
        google()
        jcenter()

    }
    ext {
        androidLibs = [
                stdlib          : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
                appcompat       : 'androidx.appcompat:appcompat:1.1.0',
                androidxCore    : 'androidx.core:core-ktx:1.2.0',
                constraintlayout: 'androidx.constraintlayout:constraintlayout:1.1.3',
                recyclerview    : 'androidx.recyclerview:recyclerview:1.1.0',
                material        : 'com.google.android.material:material:1.1.0',
                cardView        : 'androidx.cardview:cardview:1.0.0',
                legacy          : 'androidx.legacy:legacy-support-v4:1.0.0'
        ]

        lifecycle = [
                lifecycle: "androidx.lifecycle:lifecycle-extensions:2.0.0",
                viewModel: "androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0",
        ]

        coroutines = [
                coroutine         : 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5',
                supportPlayService: 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.1.1'
        ]

        coil = [
                coil: 'io.coil-kt:coil:0.9.5'
        ]

        androidPlayService = [
                location: 'com.google.android.gms:play-services-location:17.0.0'
        ]

        firebase = [
                firebaseStorage: 'com.google.firebase:firebase-storage:19.1.0',
                firebaseAuth   : 'com.google.firebase:firebase-auth:19.1.0',
                firebaseKtx    : 'com.google.firebase:firebase-firestore-ktx:21.4.1'
        ]

        room = [
                room   : 'androidx.room:room-runtime:2.2.5',
                roomKtx: 'androidx.room:room-ktx:2.2.5'
        ]
        roomCompiler = [
                roomCompiler: 'androidx.room:room-compiler:2.2.5',
        ]
        work = [
                workManager: 'androidx.work:work-runtime-ktx:2.3.4'
        ]

        test = [
                junit: 'junit:junit:4.12',
        ]
        testImplementation = [
                junitImplementation      : 'androidx.test.ext:junit:1.1.1',
                androidTestImplementation: 'androidx.test.espresso:espresso-core:3.2.0'
        ]

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
